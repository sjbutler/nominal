// 
//  Copyright (C) 2013-2015 The Open University
//
//   SPDX-FileCopyrightText: 2013-2015 The Open University
//   SPDX-License-Identifier: Apache-2.0
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// 
//     http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
// 

//
// Aggregated Java Conventions
//
//

class {
    first-char: upper;
    body: mixed;
    content: NP;
}

class-gui-action {
    content: VP, NP;
    plural: false;
}

class-static-services {
    content: NP;
    plural: true;
}

interface {
    first-char: upper;
    body: mixed;
    content: NP;
    plural: false;
}

interface-mix-in {
    content: AdjP;
}

annotation {
    first-char: upper;
    body: mixed;
    content: NP, VP;
}

annotation-member {
    first-char: lower;
    body: mixed;
    content: NP;
}

enumeration {
    first-char: upper;
    body: mixed;
    content: NP;
}

enumeration-constant {
    first-char: upper;
    body: upper;
    separator: _;
    content: NP;
}

method {
    first-char: lower;
    body: mixed;
}

method-boolean-args {
    content: VP;
}

method-boolean-noargs {
    content: VP,NP;
}

method-nonboolean-args {
    content: VP;
}

method-nonboolean-noargs {
    content: NP;
}

method-void-args {
    content: VP;
}

method-void-noargs {
    content: VP;
}

field-constant {
    first-char: upper;
    body: upper;
    separator: _;
}

field-constant-boolean {
    content: VP,NP, PP, AdjP;
}

field-constant-other {
    content: NP;
    plural: false;
}

// this is typical of practice, not what is recommended anywhere
// this can easily be overridden by the user
field-constant-string {
    content: NP,complex;
    plural: false;
} 

field-constant-collection-reference {
    content: NP;
    plural: true;
}

field-variable {
    first-char: lower;
    body: mixed;
}

field-variable-action {
    content: VP, NP;
} 

field-variable-boolean {
    content: NP, VP, AdjP, PP,AdvP;
} 

field-variable-collection-reference {
    content: NP;
    plural: true;
}

field-variable-other {
    content: NP, VP;
    plural: false;
}

formal-argument {
    first-char: lower;
    body: mixed;
}

formal-argument-action {
    content: VP, NP;
} 

formal-argument-boolean {
    content: VP, PP, NP, AdjP,AdvP;
} 

formal-argument-collection-reference {
    content: NP;
    plural: true;
}

formal-argument-other {
    content: NP;
    plural: false;
}

local-variable {
    first-char: lower;
    body: mixed;
}
 
local-variable-action {
    content: VP, NP,cipher;
} 

local-variable-boolean {
    content: cipher,VP, PP, NP, AdjP,AdvP;
} 

local-variable-collection-reference {
    content: cipher,NP;
    plural: true;
}

local-variable-other {
    content: NP,cipher;
    plural: false;
} 

// not used and tested as there are no standard rules
// Educated guess is that a label is a thing
// typography is another matter
label {
    first-char: lower;
    body: mixed;
    content: NP,abbreviation;
}

cipher-list default {
    b : boolean, Boolean, byte,Byte;
    c : char, Character;
    d : double, Double;
    e : *Exception;
    f : float, Float;
    i,j,k : int, Integer;
    l : long, Long;
    o : Object;
    s : String;
    v : *;
}

global {
    acronyms: mixed;
}